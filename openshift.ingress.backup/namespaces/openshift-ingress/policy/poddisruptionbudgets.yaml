---
apiVersion: policy/v1
items:
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    creationTimestamp: "2023-08-31T16:28:37Z"
    generation: 1
    managedFields:
    - apiVersion: policy/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"a44770ef-00da-4b58-8e1e-2ec004f78034"}: {}
        f:spec:
          f:maxUnavailable: {}
          f:selector: {}
      manager: ingress-operator
      operation: Update
      time: "2023-08-31T16:28:37Z"
    - apiVersion: policy/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"DisruptionAllowed"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:observedGeneration: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:currentHealthy: {}
          f:desiredHealthy: {}
          f:disruptionsAllowed: {}
          f:expectedPods: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-10-12T11:21:35Z"
    name: router-default
    namespace: openshift-ingress
    ownerReferences:
    - apiVersion: apps/v1
      controller: true
      kind: Deployment
      name: router-default
      uid: a44770ef-00da-4b58-8e1e-2ec004f78034
    resourceVersion: "23699665"
    uid: 58429b81-b7e0-46b5-bdb1-55c7a769101f
  spec:
    maxUnavailable: 50%
    selector:
      matchLabels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
  status:
    conditions:
    - lastTransitionTime: "2023-10-12T11:21:35Z"
      message: ""
      observedGeneration: 1
      reason: SufficientPods
      status: "True"
      type: DisruptionAllowed
    currentHealthy: 2
    desiredHealthy: 1
    disruptionsAllowed: 1
    expectedPods: 2
    observedGeneration: 1
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    creationTimestamp: "2023-10-12T11:24:22Z"
    generation: 1
    managedFields:
    - apiVersion: policy/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:ownerReferences:
            .: {}
            k:{"uid":"e3e7d8bd-57a5-4bdf-938e-809d508c9dc4"}: {}
        f:spec:
          f:maxUnavailable: {}
          f:selector: {}
      manager: ingress-operator
      operation: Update
      time: "2023-10-12T11:24:22Z"
    - apiVersion: policy/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"DisruptionAllowed"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:observedGeneration: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:desiredHealthy: {}
          f:expectedPods: {}
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-10-12T11:24:22Z"
    name: router-sharded
    namespace: openshift-ingress
    ownerReferences:
    - apiVersion: apps/v1
      controller: true
      kind: Deployment
      name: router-sharded
      uid: e3e7d8bd-57a5-4bdf-938e-809d508c9dc4
    resourceVersion: "23701445"
    uid: ae72241f-a795-4611-b163-2c5519bbb6cd
  spec:
    maxUnavailable: 50%
    selector:
      matchLabels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: sharded
  status:
    conditions:
    - lastTransitionTime: "2023-10-12T11:24:22Z"
      message: ""
      observedGeneration: 1
      reason: InsufficientPods
      status: "False"
      type: DisruptionAllowed
    currentHealthy: 0
    desiredHealthy: 1
    disruptionsAllowed: 0
    expectedPods: 2
    observedGeneration: 1
kind: PodDisruptionBudgetList
metadata:
  resourceVersion: "23705161"
